"use strict";var renderer,camera,scene,controls,spotLight,clock,plane,testMesh,COLORS={black:new THREE.Color(721410)},PLANE_WIDTH=250,PLANE_HEIGHT=750,initializeRenderer=function(){var e=document.getElementById("container"),t=new THREE.WebGLRenderer({antialias:!0});return t.shadowMap.enabled=!0,t.shadowMap.type=THREE.PCSoftShadowMap,t.setPixelRatio(window.devicePixelRatio),t.setSize(window.innerWidth,window.innerHeight),t.setClearColor(COLORS.black),e.appendChild(t.domElement),t},initializeCamera=function(){var e=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e4);return e.position.set(0,5,10),e},initializeControls=function(e,t){var n=new THREE.OrbitControls(e,t.domElement);return n.rotateSpeed=2,n.panSpeed=.8,n.zoomSpeed=1.5,n},resize=function(e,t){e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight)},init=function(){scene=new THREE.Scene,renderer=initializeRenderer(),camera=initializeCamera(),controls=initializeControls(camera,renderer),(spotLight=new THREE.SpotLight).intensity=.6,spotLight.distance=85,spotLight.penumbra=1,spotLight.angle=.8,spotLight.decay=1.5,spotLight.shadow.camera.left=-5,spotLight.shadow.camera.right=55,spotLight.shadow.camera.top=5,spotLight.shadow.camera.bottom=-5,spotLight.shadow.camera.near=1,spotLight.shadow.camera.far=100,spotLight.shadow.mapSize.width=1024,spotLight.shadow.mapSize.height=1024,spotLight.castShadow=!0,spotLight.position.set(-10,30,0),scene.add(spotLight);var e=new THREE.PlaneGeometry(PLANE_WIDTH,PLANE_HEIGHT),t=new THREE.MeshPhongMaterial;(plane=new THREE.Mesh(e,t)).rotation.x=-Math.PI/2,plane.receiveShadow=!0,scene.add(plane),(testMesh=new THREE.Mesh(new THREE.SphereGeometry(1,32,32),new THREE.MeshStandardMaterial({color:16777215,emissive:0}))).castShadow=!0,testMesh.position.set(0,5,0),spotLight.target=testMesh,testMesh.add(spotLight),scene.add(testMesh),(clock=new THREE.Clock).start(),window.addEventListener("resize",resize)},genMoveAlongCurve=function(e,t,n){var i=n+t;return function(o){if(o>=n&&o<=i){var r=(o-n)/t;return e.getPoint(r)}return o<n?e.getPoint(0):o>i?e.getPoint(1):void 0}},getLineFromCurve=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:50,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16711680,i=e.getPoints(t),o=(new THREE.BufferGeometry).setFromPoints(i),r=new THREE.LineBasicMaterial({color:n});return new THREE.Line(o,r)},ellipseCurve=new THREE.EllipseCurve(0,0,20,20,0,2*Math.PI,!1,0),cubicBezier=new THREE.CubicBezierCurve(new THREE.Vector2(-10,0),new THREE.Vector2(-5,15),new THREE.Vector2(20,15),new THREE.Vector2(10,0)),quadBezier=new THREE.QuadraticBezierCurve(new THREE.Vector2(-10,0),new THREE.Vector2(20,15),new THREE.Vector2(10,0)),spline=new THREE.SplineCurve([new THREE.Vector2(-10,0),new THREE.Vector2(-5,5),new THREE.Vector2(0,0),new THREE.Vector2(5,-5),new THREE.Vector2(10,0)]),update=function(e){controls.update()},animate=function e(){var t=clock.getElapsedTime();update(t),renderer.render(scene,camera),window.requestAnimationFrame(e)};init(),animate();